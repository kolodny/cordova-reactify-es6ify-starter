{
  "name": "cordova-reactify-es6ify-starter",
  "version": "0.0.0",
  "description": "",
  "private": true,
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "browserify": "node -e \"var fs=require('fs');var cp=require('child_process');cp.exec('npm -g root',function(_,root){root=root.trim();var browserify=require(root+'/browserify');var watchify=require(root+'/watchify');var es6ify=require(root+'/es6ify');var reactify=require(root+'/reactify2');                                   var watchifyArgs=watchify.args;var outfile='./built.js';dotfile='./.built.js';                                       browserify({debug:true}) .add(es6ify.runtime).transform(reactify).transform(es6ify.configure(/\\.jsx?$/)).require(reactify.runtime, { expose: 'react'}).require(require.resolve('./js/index.jsx'),{entry:true}).bundle().on('error',function(err){console.error(err)}).pipe(fs.createWriteStream(outfile))});\"",
    "watchify":   "node -e \"var fs=require('fs');var cp=require('child_process');cp.exec('npm -g root',function(_,root){root=root.trim();var browserify=require(root+'/browserify');var watchify=require(root+'/watchify');var es6ify=require(root+'/es6ify');var reactify=require(root+'/reactify2');                                   var watchifyArgs=watchify.args;var outfile='./built.js';dotfile='./.built.js';watchifyArgs.debug=true;var w=watchify(browserify(watchifyArgs)).add(es6ify.runtime).transform(reactify).transform(es6ify.configure(/\\.jsx?$/)).require(reactify.runtime, { expose: 'react'}).require(require.resolve('./js/index.jsx'),{entry:true});w.on('update',bundle);bundle();                     function bundle(){var wb=w.bundle();wb.on('error',function(err){console.error(String(err));fs.writeFile(outfile,'console.error('+JSON.stringify(String(err))+')',function(err){if(err)console.error(err)})});wb.pipe(fs.createWriteStream(dotfile));var bytes,time;w.on('bytes',function(b){bytes=b});w.on('time',function(t){time=t});wb.on('end',function(){fs.rename(dotfile,outfile,function(err){if(err)return console.error(err);console.error(bytes+' bytes written to '+outfile+' ('+(time/1E3).toFixed(2)+' seconds)')})})}});\"",
    "dev":        "node -e \"var fs=require('fs');var cp=require('child_process');cp.exec('npm -g root',function(_,root){root=root.trim();var browserify=require(root+'/browserify');var watchify=require(root+'/watchify');var es6ify=require(root+'/es6ify');var reactify=require(root+'/reactify2');var qserve=require(root+'/qserve');var watchifyArgs=watchify.args;var outfile='./built.js';dotfile='./.built.js';watchifyArgs.debug=true;var w=watchify(browserify(watchifyArgs)).add(es6ify.runtime).transform(reactify).transform(es6ify.configure(/\\.jsx?$/)).require(reactify.runtime, { expose: 'react'}).require(require.resolve('./js/index.jsx'),{entry:true});w.on('update',bundle);bundle();qserve({debug:true});function bundle(){var wb=w.bundle();wb.on('error',function(err){console.error(String(err));fs.writeFile(outfile,'console.error('+JSON.stringify(String(err))+')',function(err){if(err)console.error(err)})});wb.pipe(fs.createWriteStream(dotfile));var bytes,time;w.on('bytes',function(b){bytes=b});w.on('time',function(t){time=t});wb.on('end',function(){fs.rename(dotfile,outfile,function(err){if(err)return console.error(err);console.error(bytes+' bytes written to '+outfile+' ('+(time/1E3).toFixed(2)+' seconds)')})})}});\""
  },
  "author": "Moshe Kolodny",
  "license": "MIT"
}
